#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

// const Repo = require('github-download-parts');
const download = require('download-git-repo');
const program = require('commander');
const ora = require('ora');
const chalk = require('chalk');
const inquirer = require('inquirer');

const util = require('../lib/index');
const logger = require('../lib/logger');
const pkg = require('../package');


const templateList = {
  'maius-js-template': 'maiusjs/maius-template',
  'maius-ts-template': 'maiusjs/maius-ts-template',
}

const InquiryTemplateList = () =>  inquirer
.prompt([
  {
    type: 'list',
    name: 'templates',
    message: 'Please select the template to use',
    choices: [
      'maius-js-template',
      'maius-ts-template',
    ]
  }
])
.then(answers => {
  run(answers.templates);
});

/**
 * Usage.
 */
program
  .on('--help', () => {
    console.log();
    console.log('  Examples:');
    console.log();
    console.log(chalk.gray('    # create a new project named `app` base on maius template'));
    console.log('    $ maius init app');
    console.log();
  })
  .version(pkg.version, '-v, --version')
  .usage('project-name')
  .parse(process.argv);

/**
 * start
 */
util.checkVersion();
let projectName = program.args[0];
let targetDir = '';
let isCurrentDir = false;

if(!projectName) {
  targetDir = path.resolve('.');
  isCurrentDir = true;
} else {
  targetDir = path.resolve('.', projectName);
}

if(isCurrentDir || fs.existsSync(targetDir)) {

  inquirer.prompt([{
    type: 'confirm',
    message: isCurrentDir ?
      'Generate app skeleton in current dir?':
      `Target directory ${projectName} already exist. Are you sure?`,
    name: 'ok'
  }]).then(answers => {
    if (answers.ok) {
      InquiryTemplateList();
    }
  }).catch((message) => {
    logger.error(message);
    process.exit(1);
  });
} else {
  InquiryTemplateList();
}



function run(template) {
  const templateName = template || 'maius-js-template';
  const spinner = ora('Downloading template');
  spinner.start();

  download(templateList[templateName], targetDir, (err) => {
    spinner.stop();
    console.log();
    if(err) {
      logger.error(err)
      logger.error('Something went wrong');
      return;
    }
    logger.success('Generated Success, Have fun');
  });

  // const repo = new Repo('maiusjs/maius-template');
  // repo.download(targetDir)
  //   .then(() => {
  //     spinner.stop();
  //     logger.success('Generated Success, Have fun');
  //   })
  //   .catch((message) => {
  //     spinner.stop();
  //     logger.error('Something went wrong');
  //   });
}

process.on('exit', () => {
  console.log();
});
